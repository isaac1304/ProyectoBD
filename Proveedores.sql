CREATE OR REPLACE FUNCTION F_LISTAR_PROVEEDORES
RETURN SYS_REFCURSOR
AS
  V_CURSOR SYS_REFCURSOR;
BEGIN
  OPEN V_CURSOR FOR
    SELECT * FROM PROVEEDORES;
    
  RETURN V_CURSOR;
END F_LISTAR_PROVEEDORES;

CREATE OR REPLACE PROCEDURE SP_INSERTAR_PROVEEDOR (
    P_ID_PROVEEDOR NUMBER,
    P_NOMBRE VARCHAR2,
    P_CORREO VARCHAR2,
    P_TELEFONO VARCHAR2,
    P_DIRECCION VARCHAR2
)
AS
BEGIN
    INSERT INTO PROVEEDORES (ID_PROVEEDOR, NOMBRE, CORREO, TELEFONO, DIRECCION)
    VALUES (P_ID_PROVEEDOR, P_NOMBRE, P_CORREO, P_TELEFONO, P_DIRECCION);
    COMMIT;
END SP_INSERTAR_PROVEEDOR;

CREATE OR REPLACE FUNCTION F_ACTUALIZAR_PROVEEDOR(
  P_ID_PROVEEDOR NUMBER,
  P_NOMBRE VARCHAR2,
  P_CORREO VARCHAR2,
  P_TELEFONO VARCHAR2,
  P_DIRECCION VARCHAR2
) RETURN BOOLEAN
IS
  V_ACTUALIZADO BOOLEAN := FALSE;
BEGIN
  UPDATE PROVEEDORES SET
    NOMBRE = P_NOMBRE,
    CORREO = P_CORREO,
    TELEFONO = P_TELEFONO,
    DIRECCION = P_DIRECCION
  WHERE ID_PROVEEDOR = P_ID_PROVEEDOR;

  IF SQL%ROWCOUNT = 1 THEN
    V_ACTUALIZADO := TRUE;
  END IF;

  RETURN V_ACTUALIZADO;
EXCEPTION
  WHEN OTHERS THEN
    RETURN FALSE;
END F_ACTUALIZAR_PROVEEDOR;

CREATE OR REPLACE PROCEDURE SP_ELIMINAR_PROVEEDOR (
    P_ID_PROVEEDOR NUMBER
)
AS
BEGIN
    DELETE FROM PROVEEDORES
    WHERE ID_PROVEEDOR = P_ID_PROVEEDOR;
    COMMIT;
END SP_ELIMINAR_PROVEEDOR;

CREATE OR REPLACE PACKAGE PK_PROVEEDORES
IS
  FUNCTION F_LISTAR_PROVEEDORES
    RETURN SYS_REFCURSOR;
  
  PROCEDURE SP_INSERTAR_PROVEEDOR (
    P_ID_PROVEEDOR NUMBER,
    P_NOMBRE VARCHAR2,
    P_CORREO VARCHAR2,
    P_TELEFONO VARCHAR2,
    P_DIRECCION VARCHAR2
  );
  
  FUNCTION F_ACTUALIZAR_PROVEEDOR(
    P_ID_PROVEEDOR NUMBER,
    P_NOMBRE VARCHAR2,
    P_CORREO VARCHAR2,
    P_TELEFONO VARCHAR2,
    P_DIRECCION VARCHAR2
  ) RETURN BOOLEAN;
  
  PROCEDURE SP_ELIMINAR_PROVEEDOR (
    P_ID_PROVEEDOR NUMBER
  );
END PK_PROVEEDORES;

CREATE TABLE AUDITORIA_PROVEEDORES (
  ID_PROVEEDOR NUMBER(11,0),
  NOMBRE VARCHAR2(50),
  CORREO VARCHAR2(100),
  TELEFONO VARCHAR2(20),
  DIRECCION VARCHAR2(100),
  OPERACION VARCHAR2(6),
  FECHA_OPERACION DATE
);

CREATE OR REPLACE TRIGGER TRG_PROVEEDORES_INSERT
AFTER INSERT ON PROVEEDORES
FOR EACH ROW
BEGIN
  INSERT INTO AUDITORIA_PROVEEDORES (ID_PROVEEDOR, NOMBRE, CORREO, TELEFONO, DIRECCION, OPERACION, FECHA_OPERACION)
  VALUES (:NEW.ID_PROVEEDOR, :NEW.NOMBRE, :NEW.CORREO, :NEW.TELEFONO, :NEW.DIRECCION, 'INSERT', SYSDATE);
END;

CREATE OR REPLACE TRIGGER TRG_PROVEEDORES_UPDATE
AFTER UPDATE ON PROVEEDORES
FOR EACH ROW
BEGIN
  INSERT INTO AUDITORIA_PROVEEDORES (ID_PROVEEDOR, NOMBRE, CORREO, TELEFONO, DIRECCION, OPERACION, FECHA_OPERACION)
  VALUES (:OLD.ID_PROVEEDOR, :OLD.NOMBRE, :OLD.CORREO, :OLD.TELEFONO, :OLD.DIRECCION, 'UPDATE', SYSDATE);
END;

CREATE OR REPLACE TRIGGER TRG_PROVEEDORES_DELETE
AFTER DELETE ON PROVEEDORES
FOR EACH ROW
BEGIN
  INSERT INTO AUDITORIA_PROVEEDORES (ID_PROVEEDOR, NOMBRE, CORREO, TELEFONO, DIRECCION, OPERACION, FECHA_OPERACION)
  VALUES (:OLD.ID_PROVEEDOR, :OLD.NOMBRE, :OLD.CORREO, :OLD.TELEFONO, :OLD.DIRECCION, 'DELETE', SYSDATE);
END;
