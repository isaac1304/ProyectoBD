CREATE OR REPLACE FUNCTION F_LISTAR_CLIENTES
RETURN SYS_REFCURSOR
AS
  V_CURSOR SYS_REFCURSOR;
BEGIN
  OPEN V_CURSOR FOR
    SELECT * FROM CLIENTE;
    
  RETURN V_CURSOR;
END F_LISTAR_CLIENTES;
/

CREATE OR REPLACE PROCEDURE SP_INSERTAR_CLIENTE (
    P_CEDULA_CLIENTE NUMBER,
    P_NOMBRE VARCHAR2,
    P_APELLIDO_1 VARCHAR2,
    P_APELLIDO_2 VARCHAR2,
    P_NACIMIENTO DATE,
    P_CORREO VARCHAR2,
    P_TELEFONO VARCHAR2,
    P_DIRECCION VARCHAR2
)
AS
BEGIN
    INSERT INTO CLIENTE (CEDULA_CLIENTE, NOMBRE, APELLIDO_1, APELLIDO_2, NACIMIENTO, CORREO, TELEFONO, DIRECCION)
    VALUES (P_CEDULA_CLIENTE, P_NOMBRE, P_APELLIDO_1, P_APELLIDO_2, P_NACIMIENTO, P_CORREO, P_TELEFONO, P_DIRECCION);
    COMMIT;
END SP_INSERTAR_CLIENTE;
/

CREATE OR REPLACE FUNCTION F_ACTUALIZAR_CLIENTE(
  P_CEDULA_CLIENTE NUMBER,
  P_NOMBRE VARCHAR2,
  P_APELLIDO_1 VARCHAR2,
  P_APELLIDO_2 VARCHAR2,
  P_NACIMIENTO DATE,
  P_CORREO VARCHAR2,
  P_TELEFONO VARCHAR2,
  P_DIRECCION VARCHAR2
) RETURN BOOLEAN
IS
  V_ACTUALIZADO BOOLEAN := FALSE;
BEGIN
  UPDATE CLIENTE SET
    NOMBRE = P_NOMBRE,
    APELLIDO_1 = P_APELLIDO_1,
    APELLIDO_2 = P_APELLIDO_2,
    NACIMIENTO = P_NACIMIENTO,
    CORREO = P_CORREO,
    TELEFONO = P_TELEFONO,
    DIRECCION = P_DIRECCION
  WHERE CEDULA_CLIENTE = P_CEDULA_CLIENTE;

  IF SQL%ROWCOUNT = 1 THEN
    V_ACTUALIZADO := TRUE;
  END IF;

  RETURN V_ACTUALIZADO;
EXCEPTION
  WHEN OTHERS THEN
    RETURN FALSE;
END F_ACTUALIZAR_CLIENTE;
/

CREATE OR REPLACE PROCEDURE SP_ELIMINAR_CLIENTE (
    P_CEDULA_CLIENTE NUMBER
)
AS
BEGIN
    DELETE FROM CLIENTE
    WHERE CEDULA_CLIENTE = P_CEDULA_CLIENTE;
    COMMIT;
END SP_ELIMINAR_CLIENTE;
/

CREATE TABLE AUDITORIA_CLIENTE (
  CEDULA_CLIENTE NUMBER(11,0),
  NOMBRE VARCHAR2(50),
  APELLIDO_1 VARCHAR2(50),
  APELLIDO_2 VARCHAR2(50),
  NACIMIENTO DATE,
  CORREO VARCHAR2(100),
  TELEFONO VARCHAR2(20),
  DIRECCION VARCHAR2(100),
  OPERACION VARCHAR2(6),
  FECHA_OPERACION DATE
);

CREATE OR REPLACE TRIGGER TRG_CLIENTE_INSERT
AFTER INSERT ON CLIENTE
FOR EACH ROW
BEGIN
  INSERT INTO AUDITORIA_CLIENTE (CEDULA_CLIENTE, NOMBRE, APELLIDO_1, APELLIDO_2, NACIMIENTO, CORREO, TELEFONO, DIRECCION, OPERACION, FECHA_OPERACION)
  VALUES (:NEW.CEDULA_CLIENTE, :NEW.NOMBRE, :NEW.APELLIDO_1, :NEW.APELLIDO_2, :NEW.NACIMIENTO, :NEW.CORREO, :NEW.TELEFONO, :NEW.DIRECCION, 'INSERT', SYSDATE);
END;
/

CREATE OR REPLACE TRIGGER TRG_CLIENTE_UPDATE
AFTER UPDATE ON CLIENTE
FOR EACH ROW
BEGIN
  INSERT INTO AUDITORIA_CLIENTE (CEDULA_CLIENTE, NOMBRE, APELLIDO_1, APELLIDO_2, NACIMIENTO, CORREO, TELEFONO, DIRECCION, OPERACION, FECHA_OPERACION)
  VALUES (:OLD.CEDULA_CLIENTE, :OLD.NOMBRE, :OLD.APELLIDO_1, :OLD.APELLIDO_2, :OLD.NACIMIENTO, :OLD.CORREO, :OLD.TELEFONO, :OLD.DIRECCION, 'UPDATE', SYSDATE);
END;
/

CREATE OR REPLACE TRIGGER TRG_CLIENTE_DELETE
AFTER DELETE ON CLIENTE
FOR EACH ROW
BEGIN
  INSERT INTO AUDITORIA_CLIENTE (CEDULA_CLIENTE, NOMBRE, APELLIDO_1, APELLIDO_2, NACIMIENTO, CORREO, TELEFONO, DIRECCION, OPERACION, FECHA_OPERACION)
  VALUES (:OLD.CEDULA_CLIENTE, :OLD.NOMBRE, :OLD.APELLIDO_1, :OLD.APELLIDO_2, :OLD.NACIMIENTO, :OLD.CORREO, :OLD.TELEFONO, :OLD.DIRECCION, 'DELETE', SYSDATE);
END;
/

CREATE OR REPLACE PACKAGE PK_CLIENTE AS

  FUNCTION F_LISTAR_CLIENTES
    RETURN SYS_REFCURSOR;

  PROCEDURE SP_INSERTAR_CLIENTE (
    P_CEDULA_CLIENTE NUMBER,
    P_NOMBRE VARCHAR2,
    P_APELLIDO_1 VARCHAR2,
    P_APELLIDO_2 VARCHAR2,
    P_NACIMIENTO DATE,
    P_CORREO VARCHAR2,
    P_TELEFONO VARCHAR2,
    P_DIRECCION VARCHAR2
  );

  FUNCTION F_ACTUALIZAR_CLIENTE(
    P_CEDULA_CLIENTE NUMBER,
    P_NOMBRE VARCHAR2,
    P_APELLIDO_1 VARCHAR2,
    P_APELLIDO_2 VARCHAR2,
    P_NACIMIENTO DATE,
    P_CORREO VARCHAR2,
    P_TELEFONO VARCHAR2,
    P_DIRECCION VARCHAR2
  ) RETURN BOOLEAN;

  PROCEDURE SP_ELIMINAR_CLIENTE (
    P_CEDULA_CLIENTE NUMBER
  );

END PK_CLIENTE;
/
